Что нужно для переноса бота в облако для постоянной работоспособности

---

Отлично, что всё работает!  
Теперь расскажу, как перенести вашего Telegram-бота в облако для круглосуточной работы.

---

## 1. **Что нужно для переноса бота в облако**

- **VPS (виртуальный сервер)** или облачный сервис (например, Yandex Cloud, DigitalOcean, Hetzner, AWS, Google Cloud, Azure и др.).
- Доступ по SSH к серверу.
- Установленный Python 3.11+ и Chrome/Chromedriver (или Chromium).
- Копия вашего проекта (вся папка с кодом, .env, requirements.txt, сервисный JSON и т.д.).

---

## 2. **Популярные варианты для размещения**

- **Yandex Cloud** (дешёвый старт, сервер в России)
- **Hetzner** (очень дешёвый и надёжный европейский VPS)
- **DigitalOcean** (удобный интерфейс, быстрая регистрация)
- **AWS/Google Cloud/Azure** (мощные, но чуть сложнее для новичков)

---

## 3. **Пошаговый план переноса**

### Шаг 1. Зарегистрируйтесь и создайте VPS

- Зарегистрируйтесь на выбранном сервисе.
- Создайте виртуальный сервер (Ubuntu 22.04 — хороший выбор).
- Получите IP-адрес, логин (обычно `root`) и пароль или SSH-ключ.

### Шаг 2. Подключитесь к серверу по SSH

```bash
ssh root@<IP_адрес_вашего_сервера>
```

### Шаг 3. Установите необходимые пакеты

```bash
apt update
apt install -y python3.11 python3.11-venv python3-pip git unzip
apt install -y chromium-browser chromium-chromedriver  # или google-chrome-stable и chromedriver
```

### Шаг 4. Скопируйте проект на сервер

- Можно через `scp`, `rsync`, GitHub или просто загрузить архив и распаковать.

**Пример через scp:**
```bash
scp -r /путь/к/вашему/проекту root@<IP_адрес_вашего_сервера>:/root/
```

### Шаг 5. Настройте виртуальное окружение и зависимости

```bash
cd /root/Case_status_look_bot
python3.11 -m venv .venv
source .venv/bin/activate
pip install -r requirements.txt
```

### Шаг 6. Проверьте работу бота

```bash
python -m bot.main
```
или для планировщика:
```bash
python bot/checker.py
```

---

## 4. **Автоматический запуск (по перезагрузке сервера)**

- Используйте `tmux`, `screen` или настройте systemd-сервис, чтобы бот всегда работал в фоне.

**Пример с tmux:**
```bash
apt install tmux
tmux
source .venv/bin/activate
python -m bot.main
# Для выхода из tmux: Ctrl+B, затем D
```

---

## 5. **Безопасность**

- Не выкладывайте токены и сервисные JSON-файлы в открытый доступ.
- Используйте файрволл (например, ufw) для ограничения доступа к серверу.

---

## 6. **Резервное копирование**

- Регулярно делайте бэкап Google Service Account JSON и .env.

---

### Если хотите — могу подготовить подробную инструкцию под конкретный облачный сервис или VPS.  
Напишите, какой сервис вы выбрали, и я помогу с настройкой!

---

Далее:

Отлично! Вот подробная инструкция по созданию виртуального сервера (VM) в Google Cloud Platform (GCP) для размещения вашего Telegram-бота.

---

## Шаг 1. Регистрация и создание проекта

1. Перейдите на [Google Cloud Console](https://console.cloud.google.com/).
2. Войдите в свой Google-аккаунт.
3. В верхнем меню выберите или создайте новый проект (кнопка "Select project" → "New Project").

---

## Шаг 2. Включение биллинга

- Для создания VM в GCP требуется включить биллинг (можно использовать бесплатный пробный период).
- Привяжите карту, если потребуется (Google не спишет деньги без вашего согласия).

---

## Шаг 3. Включение Compute Engine

1. В левом меню выберите **Compute Engine** → **VM instances**.
2. Если впервые — нажмите **Enable** (Включить), дождитесь подготовки сервиса.

---

## Шаг 4. Создание виртуальной машины

1. Нажмите **Create Instance** (Создать экземпляр).
2. Заполните поля:
   - **Name:** любое имя (например, `case-bot-vm`)
   - **Region:** выберите ближайший к вам регион (например, `europe-west3` — Германия)
   - **Machine type:** достаточно `e2-micro` или `e2-small` (для теста — бесплатно/дёшево)
   - **Boot disk:** нажмите **Change** → выберите **Ubuntu 22.04 LTS** → **Select**
   - **Firewall:** поставьте галочки на **Allow HTTP** и **Allow HTTPS** (если планируете веб-интерфейс, для бота не обязательно)
3. Нажмите **Create**.

---

## Шаг 5. Подключение к серверу

1. После создания VM в списке появится ваша машина.
2. Нажмите **SSH** справа от вашей VM — откроется терминал прямо в браузере.

---

## Шаг 6. Дальнейшие действия

Теперь вы в терминале вашей VM!  
Дальше действуйте по инструкции из предыдущего сообщения:

- Установите Python, Chrome/Chromedriver, git, unzip и т.д.
- Скопируйте проект.
- Настройте виртуальное окружение.
- Запустите бота.

---

### Если что-то не получается на каком-то этапе — пришлите скриншот или опишите, где возник вопрос, и я помогу!

**Готовы переходить к установке Python и зависимостей на сервере?** 